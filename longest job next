# include<pthread.h>
# include<stdio.h>
# include<stdlib.h>
int bt[50],pr[50],wt[50],turnaroundtime[50],at[50];
int i,j,n,total=0,pos,avgwt,avgtt,temp;
void *input();
int main()
{
pthread_t t1;
pthread_create(&t1,NULL,input,NULL);
pthread_join(t1,NULL);
return 0;
}

void *input()
{
printf("enter total number of process ");
if(n=0 && n>=50)
{
return 0;
}
scanf("%d",&n);
for(i=0;i<n;i++)
{printf("\np[%d]",i+1);
printf("enter the arrival time-");
scanf("\n%d",&at[i]);
bt[i]=(at[i]*2);
pr[i]=i+1;
}
for(i=0;i<n;i++)
{
pos=i;
for(j=i+1;j<n;j++)
{
if(at[j]>at[pos])
   pos=j;
}
temp=at[i];
at[i]=at[pos];
at[pos]=temp;

temp=bt[i];
bt[i]=bt[pos];
bt[pos]=temp;

temp=pr[i];
pr[i]=pr[pos];
pr[pos]=temp;
}

wt[0]=0;
for(i=1;i<n;i++)
{
wt[i]=0;
for(j=0;j<i;j++)
{
wt[i]+=bt[j];
}
wt[i]=wt[i]-at[i];
total+=wt[i];
}

avgwt=total/n;
total=0;
printf("\nprocess\t  Run time  \tArrival time \t Waiting time \t Turnaround time");
for(i=0;i<n;i++)
{
turnaroundtime[i]=bt[i]+wt[i];
total+=turnaroundtime[i];
printf("\n%d\t\t%d\t\t%d\t\t%d\t\t%d",pr[i],bt[i],at[i],wt[i],turnaroundtime[i]);
}
avgtt=total/n;
printf("\n Average waiting time:-%d",avgwt);
printf("\n Average turnaround time:-%d",avgtt);
}
